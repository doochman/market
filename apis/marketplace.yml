openapi: 3.0.0
info:
  title: Marketplace API
  description: API for the internal marketplace application.
  version: 1.0.0

servers:
  - url: https://your-api-domain.com/v1
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        email:
          type: string
        role:
          type: string
        rating:
          type: number
        lastActive:
          type: string
          format: date-time

    Asset:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        userId:
          type: string
        assetId:
          type: string
        createdAt:
          type: string
          format: date-time

    Rating:
      type: object
      properties:
        rating:
          type: number
        userId:
          type: string
        raterId:
          type: string

paths:
  /users/{userId}:
    get:
      summary: Get user profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []

    put:
      summary: Update user profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []

  /users/{userId}/assets:
    get:
      summary: Get assets created by user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
      security:
        - bearerAuth: []

  /assets:
    get:
      summary: Get all assets
      responses:
        '200':
          description: List of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
      security:
        - bearerAuth: []

    post:
      summary: Create a new asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Created asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      security:
        - bearerAuth: []

  /assets/{assetId}:
    get:
      summary: Get asset details
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Asset details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      security:
        - bearerAuth: []

    put:
      summary: Update asset
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Updated asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      security:
        - bearerAuth: []

    delete:
      summary: Delete asset
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Asset deleted
      security:
        - bearerAuth: []

  /assets/{assetId}/comments:
    get:
      summary: Get comments for an asset
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
      security:
        - bearerAuth: []

    post:
      summary: Add a comment to an asset
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '201':
          description: Created comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      security:
        - bearerAuth: []

  /assets/{assetId}/comments/{commentId}:
    delete:
      summary: Delete a comment
      parameters:
        - name: assetId
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Comment deleted
      security:
        - bearerAuth: []

  /users/{userId}/rating:
    get:
      summary: Get user's rating
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's rating
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
      security:
        - bearerAuth: []

    post:
      summary: Submit a rating for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
      responses:
        '201':
          description: Rating submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
      security:
        - bearerAuth: []