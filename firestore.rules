rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /assets/{assetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.resource.data.views != null || 
                     (request.auth != null && (
                       request.auth.uid == resource.data.userId || 
                       get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == "admin"
                     ));
      allow delete: if request.auth != null && 
                       get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == "admin";
    }
    match /assets/{assetId}/comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && 
                    get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == "admin";
    }
    match /profiles/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /tagLikes/{tagId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /assets/{assetId} {
      allow read: if true;
      allow write: if request.auth != null;
      match /comments/{commentId} {
        allow read: if true;
        allow write: if request.auth != null;
        allow delete: if request.auth != null && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
      }
    }
    match /profiles/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}